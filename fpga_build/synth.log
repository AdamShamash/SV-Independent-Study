
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.48+57 (git sha1 d37449605, clang++ 18.1.8 -fPIC -O3)

-- Running command `read -vlog2k TestVerilogZ.sv.v; synth_ecp5 -top SystemConnect -json fpga_build/SystemConnect-netlist.json' --

1. Executing Verilog-2005 frontend: TestVerilogZ.sv.v
Parsing Verilog input from `TestVerilogZ.sv.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (TestVerilogZ.sv.v:184)
Warning: Yosys has only limited support for tri-state logic at the moment. (TestVerilogZ.sv.v:237)
Storing AST representation for module `$abstract\SystemConnect'.
Storing AST representation for module `$abstract\MyClockGen'.
Storing AST representation for module `$abstract\I2C_main'.
Successfully finished Verilog frontend.

2. Executing SYNTH_ECP5 pass.

2.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\$__ABC9_LUT5'.
Generating RTLIL representation for module `\$__ABC9_LUT6'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\L6MUX21'.
Generating RTLIL representation for module `\CCU2C'.
Generating RTLIL representation for module `\TRELLIS_RAM16X2'.
Generating RTLIL representation for module `\PFUMX'.
Generating RTLIL representation for module `\TRELLIS_DPR16X4'.
Generating RTLIL representation for module `\DPR16X4C'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\TRELLIS_FF'.
Generating RTLIL representation for module `\TRELLIS_IO'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\TRELLIS_COMB'.
Generating RTLIL representation for module `\DP16KD'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

2.2. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_bb.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\MULT18X18D'.
Generating RTLIL representation for module `\ALU54B'.
Generating RTLIL representation for module `\EHXPLLL'.
Generating RTLIL representation for module `\DTR'.
Generating RTLIL representation for module `\OSCG'.
Generating RTLIL representation for module `\USRMCLK'.
Generating RTLIL representation for module `\JTAGG'.
Generating RTLIL representation for module `\DELAYF'.
Generating RTLIL representation for module `\DELAYG'.
Generating RTLIL representation for module `\IDDRX1F'.
Generating RTLIL representation for module `\IDDRX2F'.
Generating RTLIL representation for module `\IDDR71B'.
Generating RTLIL representation for module `\IDDRX2DQA'.
Generating RTLIL representation for module `\ODDRX1F'.
Generating RTLIL representation for module `\ODDRX2F'.
Generating RTLIL representation for module `\ODDR71B'.
Generating RTLIL representation for module `\OSHX2A'.
Generating RTLIL representation for module `\ODDRX2DQA'.
Generating RTLIL representation for module `\ODDRX2DQSB'.
Generating RTLIL representation for module `\TSHX2DQA'.
Generating RTLIL representation for module `\TSHX2DQSA'.
Generating RTLIL representation for module `\DQSBUFM'.
Generating RTLIL representation for module `\DDRDLLA'.
Generating RTLIL representation for module `\DLLDELD'.
Generating RTLIL representation for module `\CLKDIVF'.
Generating RTLIL representation for module `\ECLKSYNCB'.
Generating RTLIL representation for module `\ECLKBRIDGECS'.
Generating RTLIL representation for module `\DCCA'.
Generating RTLIL representation for module `\DCSC'.
Generating RTLIL representation for module `\DCUA'.
Generating RTLIL representation for module `\EXTREFB'.
Generating RTLIL representation for module `\PCSCLKDIV'.
Generating RTLIL representation for module `\PUR'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\SGSR'.
Generating RTLIL representation for module `\PDPW16KD'.
Successfully finished Verilog frontend.

2.3. Executing HIERARCHY pass (managing design hierarchy).

2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\SystemConnect'.
Generating RTLIL representation for module `\SystemConnect'.
Warning: wire '\led_out' is assigned in a block at TestVerilogZ.sv.v:34.4-34.16.
TestVerilogZ.sv.v:34: Warning: Identifier `\led_out' is implicitly declared.

2.4.1. Analyzing design hierarchy..
Top module:  \SystemConnect

2.4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\I2C_main'.
Generating RTLIL representation for module `\I2C_main'.

2.4.3. Executing AST frontend in derive mode using pre-parsed AST for module `\MyClockGen'.
Generating RTLIL representation for module `\MyClockGen'.

2.4.4. Analyzing design hierarchy..
Top module:  \SystemConnect
Used module:     \I2C_main
Used module:     \MyClockGen

2.4.5. Analyzing design hierarchy..
Top module:  \SystemConnect
Used module:     \I2C_main
Used module:     \MyClockGen
Removing unused module `$abstract\I2C_main'.
Removing unused module `$abstract\MyClockGen'.
Removing unused module `$abstract\SystemConnect'.
Removed 3 unused modules.

2.5. Executing PROC pass (convert processes to netlists).

2.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$117'.
Cleaned up 1 empty switch.

2.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$224 in module TRELLIS_FF.
Marked 1 switch rules as full_case in process $proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$176 in module DPR16X4C.
Marked 1 switch rules as full_case in process $proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$118 in module TRELLIS_DPR16X4.
Marked 8 switch rules as full_case in process $proc$TestVerilogZ.sv.v:150$235 in module I2C_main.
Marked 2 switch rules as full_case in process $proc$TestVerilogZ.sv.v:30$229 in module SystemConnect.
Removed a total of 0 dead cases.

2.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 64 assignments to connections.

2.5.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\TRELLIS_FF.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$225'.
  Set init value: \Q = 1'0
Found init rule in `\I2C_main.$proc$TestVerilogZ.sv.v:0$297'.
  Set init value: \debug = 5'xxxx0
  Set init value: \sda_o = 1'1
  Set init value: \writeComplete = 1'0
  Set init value: \repeated_start = 1'0
  Set init value: \sendStart = 1'1
  Set init value: \sendStop = 1'0
  Set init value: \tester = 1'0
  Set init value: \counter = 2'00
  Set init value: \address_check = 3'111
  Set init value: \bit_count = 4'0000
  Set init value: \mem_count = 6'111111
  Set init value: \byte_count = 6'000111
  Set init value: \state = 3'000

2.5.5. Executing PROC_ARST pass (detect async resets in processes).

2.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~29 debug messages>

2.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TRELLIS_FF.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$225'.
Creating decoders for process `\TRELLIS_FF.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$224'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
Creating decoders for process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$176'.
     1/3: $1$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$175_EN[3:0]$182
     2/3: $1$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$175_DATA[3:0]$181
     3/3: $1$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$175_ADDR[3:0]$180
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$118'.
     1/3: $1$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$116_EN[3:0]$124
     2/3: $1$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$116_DATA[3:0]$123
     3/3: $1$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$116_ADDR[3:0]$122
Creating decoders for process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$117'.
Creating decoders for process `\I2C_main.$proc$TestVerilogZ.sv.v:0$297'.
Creating decoders for process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
     1/20: $4$lookahead\my_mem$234[63:0]$284
     2/20: $4$bitselwrite$pos$TestVerilogZ.sv.v:238$233[5:0]$283
     3/20: $3$lookahead\my_mem$234[63:0]$255
     4/20: $3$bitselwrite$pos$TestVerilogZ.sv.v:238$233[5:0]$254
     5/20: $2$lookahead\my_mem$234[63:0]$252
     6/20: $2$bitselwrite$pos$TestVerilogZ.sv.v:238$233[5:0]$251
     7/20: $1$lookahead\my_mem$234[63:0]$250
     8/20: $1$bitselwrite$pos$TestVerilogZ.sv.v:238$233[5:0]$249
     9/20: $0\state[2:0]
    10/20: $0\byte_count[5:0]
    11/20: $0\mem_count[5:0]
    12/20: $0\bit_count[3:0]
    13/20: $0\address_check[2:0]
    14/20: $0\tester[0:0]
    15/20: $0\sendStop[0:0]
    16/20: $0\sendStart[0:0]
    17/20: $0\repeated_start[0:0]
    18/20: $0\writeComplete[0:0]
    19/20: $0\sda_o[0:0]
    20/20: $0\debug[0:0]
Creating decoders for process `\SystemConnect.$proc$TestVerilogZ.sv.v:30$229'.
     1/3: $0\hacky_clk_div[33:0]
     2/3: $0\led_out[0:0]
     3/3: $0\clk_400KHz[0:0]

2.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\I2C_main.\debug [4:1]' from process `\I2C_main.$proc$TestVerilogZ.sv.v:0$297'.
No latch inferred for signal `\I2C_main.\rw' from process `\I2C_main.$proc$TestVerilogZ.sv.v:0$297'.
No latch inferred for signal `\I2C_main.\addressFromMaster' from process `\I2C_main.$proc$TestVerilogZ.sv.v:0$297'.
No latch inferred for signal `\I2C_main.\registerAddress' from process `\I2C_main.$proc$TestVerilogZ.sv.v:0$297'.
No latch inferred for signal `\I2C_main.\dataByte' from process `\I2C_main.$proc$TestVerilogZ.sv.v:0$297'.

2.5.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TRELLIS_FF.\Q' using process `\TRELLIS_FF.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$224'.
  created $dff cell `$procdff$623' with positive edge clock.
Creating register for signal `\DPR16X4C.\i' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$160_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$161_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$162_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$163_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$164_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$165_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$166_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$167_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$168_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$169_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$170_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$171_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$172_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$173_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:281$174_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
  created direct connection (no actual register cell created).
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$175_ADDR' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$176'.
  created $dff cell `$procdff$624' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$175_DATA' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$176'.
  created $dff cell `$procdff$625' with positive edge clock.
Creating register for signal `\DPR16X4C.$memwr$\ram$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:287$175_EN' using process `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$176'.
  created $dff cell `$procdff$626' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\i' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$100_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$101_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$102_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$103_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$104_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$105_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$106_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$107_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$108_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$109_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$110_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$111_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$112_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$113_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$114_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:207$115_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
  created direct connection (no actual register cell created).
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$116_ADDR' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$118'.
  created $dff cell `$procdff$627' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$116_DATA' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$118'.
  created $dff cell `$procdff$628' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.$memwr$\mem$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:223$116_EN' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$118'.
  created $dff cell `$procdff$629' with positive edge clock.
Creating register for signal `\TRELLIS_DPR16X4.\muxwre' using process `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$117'.
  created direct connection (no actual register cell created).
Creating register for signal `\I2C_main.\debug [0]' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$630' with positive edge clock.
Creating register for signal `\I2C_main.\sda_o' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$631' with positive edge clock.
Creating register for signal `\I2C_main.\ledByte' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$632' with positive edge clock.
Creating register for signal `\I2C_main.\writeComplete' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$633' with positive edge clock.
Creating register for signal `\I2C_main.\repeated_start' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$634' with positive edge clock.
Creating register for signal `\I2C_main.\sendStart' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$635' with positive edge clock.
Creating register for signal `\I2C_main.\sendStop' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$636' with positive edge clock.
Creating register for signal `\I2C_main.\tester' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$637' with positive edge clock.
Creating register for signal `\I2C_main.\counter' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$638' with positive edge clock.
Creating register for signal `\I2C_main.\address_check' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$639' with positive edge clock.
Creating register for signal `\I2C_main.\bit_count' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$640' with positive edge clock.
Creating register for signal `\I2C_main.\my_mem' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$641' with positive edge clock.
Creating register for signal `\I2C_main.\mem_count' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$642' with positive edge clock.
Creating register for signal `\I2C_main.\byte_count' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$643' with positive edge clock.
Creating register for signal `\I2C_main.\state' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$644' with positive edge clock.
Creating register for signal `\I2C_main.$bitselwrite$pos$TestVerilogZ.sv.v:238$233' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$645' with positive edge clock.
Creating register for signal `\I2C_main.$lookahead\my_mem$234' using process `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
  created $dff cell `$procdff$646' with positive edge clock.
Creating register for signal `\SystemConnect.\clk_400KHz' using process `\SystemConnect.$proc$TestVerilogZ.sv.v:30$229'.
  created $dff cell `$procdff$647' with positive edge clock.
Creating register for signal `\SystemConnect.\hacky_clk_div' using process `\SystemConnect.$proc$TestVerilogZ.sv.v:30$229'.
  created $dff cell `$procdff$648' with positive edge clock.
Creating register for signal `\SystemConnect.\led_out' using process `\SystemConnect.$proc$TestVerilogZ.sv.v:30$229'.
  created $dff cell `$procdff$649' with positive edge clock.

2.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `TRELLIS_FF.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$225'.
Found and cleaned up 2 empty switches in `\TRELLIS_FF.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$224'.
Removing empty process `TRELLIS_FF.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:350$224'.
Removing empty process `DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$199'.
Found and cleaned up 1 empty switch in `\DPR16X4C.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:285$176'.
Removing empty process `TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:0$142'.
Found and cleaned up 1 empty switch in `\TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:221$118'.
Removing empty process `TRELLIS_DPR16X4.$proc$/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_sim.v:213$117'.
Removing empty process `I2C_main.$proc$TestVerilogZ.sv.v:0$297'.
Found and cleaned up 23 empty switches in `\I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
Removing empty process `I2C_main.$proc$TestVerilogZ.sv.v:150$235'.
Found and cleaned up 2 empty switches in `\SystemConnect.$proc$TestVerilogZ.sv.v:30$229'.
Removing empty process `SystemConnect.$proc$TestVerilogZ.sv.v:30$229'.
Cleaned up 29 empty switches.

2.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module MyClockGen.
Optimizing module I2C_main.
<suppressed ~21 debug messages>
Optimizing module SystemConnect.

2.6. Executing FLATTEN pass (flatten design).
Deleting now unused module MyClockGen.
Deleting now unused module I2C_main.
<suppressed ~2 debug messages>

2.7. Executing TRIBUF pass.

2.8. Executing DEMINOUT pass (demote inout ports to input or output).
Demoting inout port SystemConnect.gpdi_sda to output.

2.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.
<suppressed ~3 debug messages>

2.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 52 unused cells and 232 unused wires.
<suppressed ~60 debug messages>

2.11. Executing CHECK pass (checking for obvious problems).
Checking module SystemConnect...
Warning: Wire SystemConnect.\gpdi_scl is used but has no driver.
Found and reported 1 problems.

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

2.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\instance1.$procmux$518: \instance1.repeated_start -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

2.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
  Optimizing cells in module \SystemConnect.
Performed a total of 1 changes.

2.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.12.6. Executing OPT_DFF pass (perform DFF optimizations).

2.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

2.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.12.9. Rerunning OPT passes. (Maybe there is more to do..)

2.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

2.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
Performed a total of 0 changes.

2.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.12.13. Executing OPT_DFF pass (perform DFF optimizations).

2.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..

2.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.12.16. Finished OPT passes. (There is nothing left to do.)

2.13. Executing FSM pass (extract and optimize FSM).

2.13.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking SystemConnect.instance1.state as FSM state register:
    Register has an initialization value.

2.13.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.13.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..

2.13.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.13.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.13.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.13.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.14. Executing OPT pass (performing simple optimizations).

2.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

2.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
Performed a total of 0 changes.

2.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.14.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$648 ($dff) from module SystemConnect (D = $add$TestVerilogZ.sv.v:37$231_Y, Q = \hacky_clk_div, rval = 34'0000000000000000000000000000000000).
Adding SRST signal on $procdff$647 ($dff) from module SystemConnect (D = $procmux$618_Y, Q = \clk_400KHz, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$659 ($sdff) from module SystemConnect (D = $not$TestVerilogZ.sv.v:40$232_Y, Q = \clk_400KHz).
Adding EN signal on $flatten\instance1.$procdff$643 ($dff) from module SystemConnect (D = $flatten\instance1.$sub$TestVerilogZ.sv.v:241$295_Y [5:0], Q = \instance1.byte_count).
Adding EN signal on $flatten\instance1.$procdff$640 ($dff) from module SystemConnect (D = $flatten\instance1.$procmux$468_Y, Q = \instance1.bit_count).
Adding SRST signal on $auto$ff.cc:266:slice$668 ($dffe) from module SystemConnect (D = $flatten\instance1.$procmux$465_Y, Q = \instance1.bit_count, rval = 4'0000).
Adding EN signal on $flatten\instance1.$procdff$639 ($dff) from module SystemConnect (D = $flatten\instance1.$procmux$484_Y, Q = \instance1.address_check).
Adding EN signal on $flatten\instance1.$procdff$636 ($dff) from module SystemConnect (D = $flatten\instance1.$procmux$510_Y, Q = \instance1.sendStop).
Adding EN signal on $flatten\instance1.$procdff$635 ($dff) from module SystemConnect (D = 1'0, Q = \instance1.sendStart).
Adding EN signal on $flatten\instance1.$procdff$634 ($dff) from module SystemConnect (D = $flatten\instance1.$procmux$529_Y, Q = \instance1.repeated_start).
Adding EN signal on $flatten\instance1.$procdff$633 ($dff) from module SystemConnect (D = 1'0, Q = \instance1.writeComplete).
Adding EN signal on $flatten\instance1.$procdff$630 ($dff) from module SystemConnect (D = $flatten\instance1.$not$TestVerilogZ.sv.v:185$262_Y, Q = \instance1.debug [0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$696 ($dffe) from module SystemConnect.

2.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 30 unused cells and 30 unused wires.
<suppressed ~31 debug messages>

2.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.
<suppressed ~3 debug messages>

2.14.9. Rerunning OPT passes. (Maybe there is more to do..)

2.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

2.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
Performed a total of 0 changes.

2.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

2.14.13. Executing OPT_DFF pass (perform DFF optimizations).

2.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

2.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.14.16. Rerunning OPT passes. (Maybe there is more to do..)

2.14.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

2.14.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
Performed a total of 0 changes.

2.14.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.14.20. Executing OPT_DFF pass (perform DFF optimizations).

2.14.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..

2.14.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.14.23. Finished OPT passes. (There is nothing left to do.)

2.15. Executing WREDUCE pass (reducing word size of cells).
Removed top 29 bits (of 32) from port B of cell SystemConnect.$lt$TestVerilogZ.sv.v:36$230 ($lt).
Removed top 31 bits (of 32) from port B of cell SystemConnect.$add$TestVerilogZ.sv.v:37$231 ($add).
Removed top 31 bits (of 32) from port B of cell SystemConnect.$flatten\instance1.$sub$TestVerilogZ.sv.v:241$295 ($sub).
Removed top 26 bits (of 32) from port Y of cell SystemConnect.$flatten\instance1.$sub$TestVerilogZ.sv.v:241$295 ($sub).
Removed top 1 bits (of 4) from port B of cell SystemConnect.$flatten\instance1.$eq$TestVerilogZ.sv.v:240$294 ($eq).
Removed top 1 bits (of 3) from port B of cell SystemConnect.$flatten\instance1.$eq$TestVerilogZ.sv.v:221$276 ($eq).
Removed top 1 bits (of 3) from port B of cell SystemConnect.$flatten\instance1.$eq$TestVerilogZ.sv.v:209$270 ($eq).
Removed top 31 bits (of 32) from port B of cell SystemConnect.$flatten\instance1.$sub$TestVerilogZ.sv.v:193$266 ($sub).
Removed top 28 bits (of 32) from port Y of cell SystemConnect.$flatten\instance1.$sub$TestVerilogZ.sv.v:193$266 ($sub).
Removed top 31 bits (of 32) from port B of cell SystemConnect.$flatten\instance1.$gt$TestVerilogZ.sv.v:192$265 ($gt).
Removed top 31 bits (of 32) from port B of cell SystemConnect.$flatten\instance1.$add$TestVerilogZ.sv.v:191$264 ($add).
Removed top 28 bits (of 32) from port Y of cell SystemConnect.$flatten\instance1.$add$TestVerilogZ.sv.v:191$264 ($add).
Removed top 2 bits (of 3) from port B of cell SystemConnect.$flatten\instance1.$eq$TestVerilogZ.sv.v:190$263 ($eq).
Removed top 31 bits (of 32) from port B of cell SystemConnect.$flatten\instance1.$gt$TestVerilogZ.sv.v:179$260 ($gt).
Removed top 3 bits (of 6) from port B of cell SystemConnect.$flatten\instance1.$lt$TestVerilogZ.sv.v:179$259 ($lt).
Removed top 31 bits (of 32) from port B of cell SystemConnect.$flatten\instance1.$add$TestVerilogZ.sv.v:167$247 ($add).
Removed top 30 bits (of 32) from port Y of cell SystemConnect.$flatten\instance1.$add$TestVerilogZ.sv.v:167$247 ($add).
Removed top 28 bits (of 32) from wire SystemConnect.$flatten\instance1.$add$TestVerilogZ.sv.v:191$264_Y.
Removed top 4 bits (of 5) from wire SystemConnect.debug.

2.16. Executing PEEPOPT pass (run peephole optimizers).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

2.18. Executing SHARE pass (SAT-based resource sharing).

2.19. Executing TECHMAP pass (map to technology primitives).

2.19.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.19.2. Continuing TECHMAP pass.
Using template $paramod$145abe87336b813af869805af52840f8eaed9f1a\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~118 debug messages>

2.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

2.22. Executing TECHMAP pass (map to technology primitives).

2.22.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/mul2dsp.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

2.22.2. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/ecp5/dsp_map.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/ecp5/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL18X18'.
Successfully finished Verilog frontend.

2.22.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

2.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module SystemConnect:
  creating $macc model for $add$TestVerilogZ.sv.v:37$231 ($add).
  creating $macc model for $flatten\instance1.$add$TestVerilogZ.sv.v:167$247 ($add).
  creating $macc model for $flatten\instance1.$add$TestVerilogZ.sv.v:191$264 ($add).
  creating $macc model for $flatten\instance1.$sub$TestVerilogZ.sv.v:193$266 ($sub).
  creating $macc model for $flatten\instance1.$sub$TestVerilogZ.sv.v:241$295 ($sub).
  creating $alu model for $macc $flatten\instance1.$sub$TestVerilogZ.sv.v:241$295.
  creating $alu model for $macc $flatten\instance1.$sub$TestVerilogZ.sv.v:193$266.
  creating $alu model for $macc $flatten\instance1.$add$TestVerilogZ.sv.v:191$264.
  creating $alu model for $macc $flatten\instance1.$add$TestVerilogZ.sv.v:167$247.
  creating $alu model for $macc $add$TestVerilogZ.sv.v:37$231.
  creating $alu model for $flatten\instance1.$gt$TestVerilogZ.sv.v:179$260 ($gt): new $alu
  creating $alu model for $flatten\instance1.$lt$TestVerilogZ.sv.v:179$259 ($lt): new $alu
  creating $alu model for $lt$TestVerilogZ.sv.v:36$230 ($lt): new $alu
  creating $alu cell for $lt$TestVerilogZ.sv.v:36$230: $auto$alumacc.cc:485:replace_alu$716
  creating $alu cell for $flatten\instance1.$lt$TestVerilogZ.sv.v:179$259: $auto$alumacc.cc:485:replace_alu$727
  creating $alu cell for $flatten\instance1.$gt$TestVerilogZ.sv.v:179$260: $auto$alumacc.cc:485:replace_alu$738
  creating $alu cell for $add$TestVerilogZ.sv.v:37$231: $auto$alumacc.cc:485:replace_alu$743
  creating $alu cell for $flatten\instance1.$add$TestVerilogZ.sv.v:167$247: $auto$alumacc.cc:485:replace_alu$746
  creating $alu cell for $flatten\instance1.$add$TestVerilogZ.sv.v:191$264: $auto$alumacc.cc:485:replace_alu$749
  creating $alu cell for $flatten\instance1.$sub$TestVerilogZ.sv.v:193$266: $auto$alumacc.cc:485:replace_alu$752
  creating $alu cell for $flatten\instance1.$sub$TestVerilogZ.sv.v:241$295: $auto$alumacc.cc:485:replace_alu$755
  created 8 $alu and 0 $macc cells.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.
<suppressed ~2 debug messages>

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

2.24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
Performed a total of 0 changes.

2.24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.24.6. Executing OPT_DFF pass (perform DFF optimizations).

2.24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 1 unused cells and 5 unused wires.
<suppressed ~2 debug messages>

2.24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.24.9. Rerunning OPT passes. (Maybe there is more to do..)

2.24.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

2.24.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
Performed a total of 0 changes.

2.24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.24.13. Executing OPT_DFF pass (perform DFF optimizations).

2.24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..

2.24.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.24.16. Finished OPT passes. (There is nothing left to do.)

2.25. Executing MEMORY pass.

2.25.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.25.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.25.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

2.25.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.25.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

2.25.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..

2.25.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.25.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.25.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..

2.25.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..

2.27. Executing MEMORY_LIBMAP pass (mapping memories to cells).

2.28. Executing TECHMAP pass (map to technology primitives).

2.28.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/ecp5/lutrams_map.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/ecp5/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__TRELLIS_DPR16X4_'.
Successfully finished Verilog frontend.

2.28.2. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/ecp5/brams_map.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/ecp5/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ECP5_DP16KD_'.
Generating RTLIL representation for module `\$__ECP5_PDPW16KD_'.
Successfully finished Verilog frontend.

2.28.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.
<suppressed ~9 debug messages>

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.29.3. Executing OPT_DFF pass (perform DFF optimizations).

2.29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 4 unused cells and 10 unused wires.
<suppressed ~5 debug messages>

2.29.5. Finished fast OPT passes.

2.30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

2.31. Executing OPT pass (performing simple optimizations).

2.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.
<suppressed ~1 debug messages>

2.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

2.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
    Consolidated identical input bits for $mux cell $flatten\instance1.$procmux$391:
      Old ports: A=3'010, B=3'110, Y=$flatten\instance1.$procmux$391_Y
      New ports: A=1'0, B=1'1, Y=$flatten\instance1.$procmux$391_Y [2]
      New connections: $flatten\instance1.$procmux$391_Y [1:0] = 2'10
  Optimizing cells in module \SystemConnect.
Performed a total of 1 changes.

2.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.31.6. Executing OPT_DFF pass (perform DFF optimizations).

2.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.31.9. Rerunning OPT passes. (Maybe there is more to do..)

2.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

2.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
Performed a total of 0 changes.

2.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.31.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$676 ($dffe) from module SystemConnect (D = $flatten\instance1.$procmux$476_Y, Q = \instance1.address_check, rval = 3'111).

2.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

2.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.31.16. Rerunning OPT passes. (Maybe there is more to do..)

2.31.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

2.31.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
Performed a total of 0 changes.

2.31.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.31.20. Executing OPT_DFF pass (perform DFF optimizations).

2.31.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..

2.31.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.31.23. Finished OPT passes. (There is nothing left to do.)

2.32. Executing TECHMAP pass (map to technology primitives).

2.32.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.32.2. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/ecp5/arith_map.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/ecp5/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

2.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$7af24cf7f572852703f08ef7a936c59efa2c57af\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$82dd3d1de944bbace4395e60e0bc78844e2f78eb\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$constmap:be68d1bbdfbb8485a7685be9e09caeccd4828d9e$paramod$92adee9538f2381d8e5006822c900eb986d754e8\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$1a9b2adc0e90ccf2d22dba8d72430d10741e65ed\_90_alu for cells of type $alu.
Using template $paramod$constmap:8cab8cd37efbce96701e681e00bcbc727c8b2779$paramod$56a48bd44e86d08fefdee460d5d35297c232a9bd\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_80_ecp5_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$1eea76d7a4c6ac9eb7ee572e075cc080fc50bca4\_80_ecp5_alu for cells of type $alu.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_ecp5_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~1359 debug messages>

2.33. Executing OPT pass (performing simple optimizations).

2.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.
<suppressed ~523 debug messages>

2.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
<suppressed ~255 debug messages>
Removed a total of 85 cells.

2.33.3. Executing OPT_DFF pass (perform DFF optimizations).

2.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 127 unused cells and 438 unused wires.
<suppressed ~128 debug messages>

2.33.5. Finished fast OPT passes.

2.34. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..

2.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.36. Executing TECHMAP pass (map to technology primitives).

2.36.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Successfully finished Verilog frontend.

2.36.2. Continuing TECHMAP pass.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFF_P_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFFE_PP_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_PP_.
Using template $paramod\$_DFF_P_\_TECHMAP_WIREINIT_Q_=1'1 for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~173 debug messages>

2.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.
<suppressed ~8 debug messages>

2.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).

2.39. Executing LATTICE_GSR pass (implement FF init values).
Handling GSR in SystemConnect.

2.40. Executing ATTRMVCP pass (move or copy attributes).

2.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 2 unused cells and 297 unused wires.
<suppressed ~3 debug messages>

2.42. Executing TECHMAP pass (map to technology primitives).

2.42.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/ecp5/latches_map.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/ecp5/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.43. Executing ABC9 pass.

2.43.1. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.2. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.3. Executing SCC pass (detecting logic loops).
Found an SCC: $auto$ff.cc:266:slice$1046 $auto$simplemap.cc:126:simplemap_reduce$1172 $auto$simplemap.cc:38:simplemap_not$1783 $auto$ff.cc:266:slice$1047 $auto$alumacc.cc:485:replace_alu$716.slice[0].ccu2c_i $auto$ff.cc:266:slice$1048 $auto$simplemap.cc:126:simplemap_reduce$1190 $auto$simplemap.cc:126:simplemap_reduce$1173 $auto$simplemap.cc:38:simplemap_not$1785 $auto$ff.cc:266:slice$1049 $auto$alumacc.cc:485:replace_alu$716.slice[2].ccu2c_i $auto$simplemap.cc:38:simplemap_not$1786 $auto$ff.cc:266:slice$1050 $auto$simplemap.cc:126:simplemap_reduce$1174 $auto$simplemap.cc:38:simplemap_not$1787 $auto$ff.cc:266:slice$1051 $auto$alumacc.cc:485:replace_alu$716.slice[4].ccu2c_i $auto$simplemap.cc:38:simplemap_not$1788 $auto$ff.cc:266:slice$1052 $auto$simplemap.cc:126:simplemap_reduce$1199 $auto$simplemap.cc:126:simplemap_reduce$1191 $auto$simplemap.cc:126:simplemap_reduce$1175 $auto$simplemap.cc:38:simplemap_not$1789 $auto$ff.cc:266:slice$1053 $auto$simplemap.cc:38:simplemap_not$1796 $auto$ff.cc:266:slice$1060 $auto$simplemap.cc:126:simplemap_reduce$1179 $auto$simplemap.cc:38:simplemap_not$1797 $auto$ff.cc:266:slice$1061 $auto$simplemap.cc:38:simplemap_not$1795 $auto$ff.cc:266:slice$1059 $auto$simplemap.cc:126:simplemap_reduce$1193 $auto$simplemap.cc:126:simplemap_reduce$1178 $auto$simplemap.cc:38:simplemap_not$1794 $auto$ff.cc:266:slice$1058 $auto$simplemap.cc:38:simplemap_not$1793 $auto$ff.cc:266:slice$1057 $auto$simplemap.cc:126:simplemap_reduce$1177 $auto$simplemap.cc:38:simplemap_not$1792 $auto$ff.cc:266:slice$1056 $auto$simplemap.cc:38:simplemap_not$1791 $auto$ff.cc:266:slice$1055 $auto$alumacc.cc:485:replace_alu$716.slice[12].ccu2c_i $auto$alumacc.cc:485:replace_alu$716.slice[10].ccu2c_i $auto$alumacc.cc:485:replace_alu$716.slice[8].ccu2c_i $auto$alumacc.cc:485:replace_alu$716.slice[6].ccu2c_i $auto$simplemap.cc:126:simplemap_reduce$1204 $auto$simplemap.cc:126:simplemap_reduce$1200 $auto$simplemap.cc:126:simplemap_reduce$1192 $auto$simplemap.cc:126:simplemap_reduce$1176 $auto$simplemap.cc:38:simplemap_not$1790 $auto$ff.cc:266:slice$1054 $auto$alumacc.cc:485:replace_alu$716.slice[14].ccu2c_i $auto$simplemap.cc:38:simplemap_not$2344 $auto$ff.cc:266:slice$1062 $auto$simplemap.cc:126:simplemap_reduce$1180 $auto$simplemap.cc:38:simplemap_not$2345 $auto$ff.cc:266:slice$1063 $auto$alumacc.cc:485:replace_alu$716.slice[16].ccu2c_i $auto$simplemap.cc:38:simplemap_not$1800 $auto$ff.cc:266:slice$1064 $auto$simplemap.cc:126:simplemap_reduce$1194 $auto$simplemap.cc:126:simplemap_reduce$1181 $auto$simplemap.cc:38:simplemap_not$1801 $auto$ff.cc:266:slice$1065 $auto$alumacc.cc:485:replace_alu$716.slice[18].ccu2c_i $auto$simplemap.cc:38:simplemap_not$1802 $auto$ff.cc:266:slice$1066 $auto$simplemap.cc:126:simplemap_reduce$1182 $auto$simplemap.cc:38:simplemap_not$2349 $auto$ff.cc:266:slice$1067 $auto$alumacc.cc:485:replace_alu$716.slice[20].ccu2c_i $auto$simplemap.cc:38:simplemap_not$1804 $auto$ff.cc:266:slice$1068 $auto$simplemap.cc:126:simplemap_reduce$1201 $auto$simplemap.cc:126:simplemap_reduce$1195 $auto$simplemap.cc:126:simplemap_reduce$1183 $auto$simplemap.cc:38:simplemap_not$1805 $auto$ff.cc:266:slice$1069 $auto$alumacc.cc:485:replace_alu$716.slice[22].ccu2c_i $auto$simplemap.cc:38:simplemap_not$1806 $auto$ff.cc:266:slice$1070 $auto$simplemap.cc:126:simplemap_reduce$1184 $auto$simplemap.cc:38:simplemap_not$1807 $auto$ff.cc:266:slice$1071 $auto$alumacc.cc:485:replace_alu$716.slice[24].ccu2c_i $auto$simplemap.cc:38:simplemap_not$1808 $auto$ff.cc:266:slice$1072 $auto$simplemap.cc:126:simplemap_reduce$1196 $auto$simplemap.cc:126:simplemap_reduce$1185 $auto$simplemap.cc:38:simplemap_not$1809 $auto$ff.cc:266:slice$1073 $auto$alumacc.cc:485:replace_alu$716.slice[26].ccu2c_i $auto$simplemap.cc:38:simplemap_not$1810 $auto$ff.cc:266:slice$1074 $auto$simplemap.cc:126:simplemap_reduce$1186 $auto$simplemap.cc:38:simplemap_not$2357 $auto$ff.cc:266:slice$1075 $auto$alumacc.cc:485:replace_alu$716.slice[28].ccu2c_i $auto$simplemap.cc:38:simplemap_not$1812 $auto$ff.cc:266:slice$1076 $auto$ff.cc:266:slice$1077 $auto$alumacc.cc:485:replace_alu$716.slice[30].ccu2c_i $auto$simplemap.cc:38:simplemap_not$2360 $auto$ff.cc:266:slice$1078 $auto$simplemap.cc:38:simplemap_not$1156 $auto$simplemap.cc:225:simplemap_logbin$1781 $auto$simplemap.cc:126:simplemap_reduce$1188 $auto$simplemap.cc:38:simplemap_not$2361 $auto$ff.cc:266:slice$1079 $auto$simplemap.cc:126:simplemap_reduce$1036 $auto$simplemap.cc:75:simplemap_bitop$1155 $auto$simplemap.cc:126:simplemap_reduce$1209 $auto$simplemap.cc:126:simplemap_reduce$1207 $auto$simplemap.cc:126:simplemap_reduce$1205 $auto$simplemap.cc:126:simplemap_reduce$1202 $auto$simplemap.cc:126:simplemap_reduce$1197 $auto$simplemap.cc:126:simplemap_reduce$1187 $auto$simplemap.cc:38:simplemap_not$1813
Found an SCC: $auto$simplemap.cc:126:simplemap_reduce$1231 $auto$simplemap.cc:196:simplemap_lognot$1421 $auto$ff.cc:266:slice$1039 $auto$dfflegalize.cc:941:flip_pol$2517 $auto$ff.cc:485:convert_ce_over_srst$2515 $auto$simplemap.cc:126:simplemap_reduce$1213 $auto$simplemap.cc:126:simplemap_reduce$1234 $auto$simplemap.cc:126:simplemap_reduce$1232 $auto$simplemap.cc:341:simplemap_lut$1166 $auto$simplemap.cc:341:simplemap_lut$1163 $auto$ff.cc:266:slice$1038 $auto$dfflegalize.cc:941:flip_pol$2513 $auto$ff.cc:485:convert_ce_over_srst$2511 $auto$simplemap.cc:167:logic_reduce$1420 $auto$simplemap.cc:167:logic_reduce$1418 $auto$ff.cc:266:slice$1037 $auto$dfflegalize.cc:941:flip_pol$2509 $auto$ff.cc:485:convert_ce_over_srst$2507 $auto$simplemap.cc:126:simplemap_reduce$1217 $auto$simplemap.cc:126:simplemap_reduce$1215
Found an SCC: $auto$ff.cc:266:slice$1265 $auto$dfflegalize.cc:941:flip_pol$2529 $auto$ff.cc:485:convert_ce_over_srst$2527 $auto$ff.cc:266:slice$1263 $auto$dfflegalize.cc:941:flip_pol$2521 $auto$ff.cc:485:convert_ce_over_srst$2519 $auto$simplemap.cc:126:simplemap_reduce$1719 $auto$ff.cc:266:slice$1264 $auto$dfflegalize.cc:941:flip_pol$2525 $auto$ff.cc:485:convert_ce_over_srst$2523 $auto$simplemap.cc:126:simplemap_reduce$1343 $auto$simplemap.cc:196:simplemap_lognot$1724 $auto$simplemap.cc:126:simplemap_reduce$1722 $auto$simplemap.cc:126:simplemap_reduce$1720 $auto$opt_expr.cc:617:replace_const_cells$2465 $auto$ff.cc:266:slice$1266 $auto$dfflegalize.cc:941:flip_pol$2533 $auto$ff.cc:485:convert_ce_over_srst$2531 $auto$simplemap.cc:126:simplemap_reduce$1238 $auto$simplemap.cc:126:simplemap_reduce$1345
Found 3 SCCs in module SystemConnect.
Found 3 SCCs.

2.43.4. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.5. Executing PROC pass (convert processes to netlists).

2.43.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.43.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.43.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.43.5.4. Executing PROC_INIT pass (extract init attributes).

2.43.5.5. Executing PROC_ARST pass (detect async resets in processes).

2.43.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.43.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.43.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.43.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.43.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.43.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.43.5.12. Executing OPT_EXPR pass (perform const folding).

2.43.6. Executing TECHMAP pass (map to technology primitives).

2.43.6.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.43.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~160 debug messages>

2.43.7. Executing OPT pass (performing simple optimizations).

2.43.7.1. Executing OPT_EXPR pass (perform const folding).

2.43.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

2.43.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

2.43.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

2.43.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

2.43.7.6. Executing OPT_DFF pass (perform DFF optimizations).

2.43.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

2.43.7.8. Executing OPT_EXPR pass (perform const folding).

2.43.7.9. Finished OPT passes. (There is nothing left to do.)

2.43.8. Executing TECHMAP pass (map to technology primitives).

2.43.8.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/abc9_map.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

2.43.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

2.43.9. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

2.43.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

2.43.11. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

2.43.13. Executing TECHMAP pass (map to technology primitives).

2.43.13.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.43.13.2. Continuing TECHMAP pass.
Using template $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C for cells of type $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C.
Using template $paramod\LUT4\INIT=16'1001011010101010 for cells of type LUT4.
Using template $paramod\LUT2\INIT=4'1010 for cells of type LUT2.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~199 debug messages>

2.43.14. Executing OPT pass (performing simple optimizations).

2.43.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.
<suppressed ~18 debug messages>

2.43.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.43.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.43.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
Performed a total of 0 changes.

2.43.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.43.14.6. Executing OPT_DFF pass (perform DFF optimizations).

2.43.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

2.43.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.43.14.9. Rerunning OPT passes. (Maybe there is more to do..)

2.43.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SystemConnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.43.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SystemConnect.
Performed a total of 0 changes.

2.43.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SystemConnect'.
Removed a total of 0 cells.

2.43.14.13. Executing OPT_DFF pass (perform DFF optimizations).

2.43.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SystemConnect..

2.43.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module SystemConnect.

2.43.14.16. Finished OPT passes. (There is nothing left to do.)

2.43.15. Executing AIGMAP pass (map logic to AIG).
Module SystemConnect: replaced 18 cells with 120 new cells, skipped 39 cells.
  replaced 3 cell types:
       2 $_OR_
       2 $_XOR_
      14 $_MUX_
  not replaced 3 cell types:
      31 $specify2
       4 $_NOT_
       4 $_AND_

2.43.16. Executing AIGMAP pass (map logic to AIG).
Module SystemConnect: replaced 114 cells with 653 new cells, skipped 234 cells.
  replaced 4 cell types:
      39 $_OR_
       6 $_XOR_
       7 $_ORNOT_
      62 $_MUX_
  not replaced 7 cell types:
       2 $scopeinfo
      75 $_NOT_
      58 $_AND_
      58 TRELLIS_FF
       1 EHXPLLL
      39 $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C
       1 $__ABC9_SCC_BREAKER

2.43.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

2.43.16.3. Executing XAIGER backend.
<suppressed ~11 debug messages>
Extracted 308 AND gates and 1002 wires from module `SystemConnect' to a netlist network with 72 inputs and 89 outputs.

2.43.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

2.43.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     72/     89  and =     238  lev =   21 (0.46)  mem = 0.01 MB  box = 39  bb = 0
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     72/     89  and =     236  lev =   12 (0.31)  mem = 0.01 MB  ch =   25  box = 39  bb = 0
ABC: + &if -W 300 -v 
ABC: K = 7. Memory (bytes): Truth =    0. Cut =   64. Obj =  148. Set =  672. CutMin = no
ABC: Node =     236.  Ch =    24.  Total mem =    0.14 MB. Peak cut mem =    0.02 MB.
ABC: P:  Del = 1919.00.  Ar =     209.0.  Edge =      287.  Cut =     2380.  T =     0.00 sec
ABC: P:  Del = 1919.00.  Ar =     211.0.  Edge =      286.  Cut =     2358.  T =     0.00 sec
ABC: P:  Del = 1919.00.  Ar =     161.0.  Edge =      261.  Cut =     4123.  T =     0.00 sec
ABC: F:  Del = 1919.00.  Ar =     124.0.  Edge =      250.  Cut =     2411.  T =     0.00 sec
ABC: A:  Del = 1919.00.  Ar =     121.0.  Edge =      241.  Cut =     2288.  T =     0.00 sec
ABC: A:  Del = 1919.00.  Ar =     121.0.  Edge =      241.  Cut =     2247.  T =     0.00 sec
ABC: Total time =     0.01 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =     72/     89  and =     180  lev =   11 (0.30)  mem = 0.01 MB  box = 39  bb = 0
ABC: Mapping (K=7)  :  lut =     49  edge =     182  lev =    4 (0.14)  Boxes are not in a topological order. Switching to level computation without boxes.
ABC: levB =   11  mem = 0.00 MB
ABC: LUT = 49 : 2=13 26.5 %  3=12 24.5 %  4=10 20.4 %  5=7 14.3 %  6=4 8.2 %  7=3 6.1 %  Ave = 3.71
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.05 seconds, total: 0.05 seconds

2.43.16.6. Executing AIGER frontend.
<suppressed ~334 debug messages>
Removed 249 unused cells and 914 unused wires.

2.43.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:       57
ABC RESULTS:   $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C cells:       39
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       38
Removing temp directory.

2.43.17. Executing TECHMAP pass (map to technology primitives).

2.43.17.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

2.43.17.2. Continuing TECHMAP pass.
Using template $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C for cells of type $paramod$838872d5a4bab89607f53482b205c0fd50d8b82e\CCU2C.
Using template $paramod\$__ABC9_SCC_BREAKER\WIDTH=32'00000000000000000000000000000011 for cells of type $__ABC9_SCC_BREAKER.
No more expansions possible.
<suppressed ~57 debug messages>
Removed 10 unused cells and 1385 unused wires.

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: /tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v
Parsing Verilog input from `/tools/oss-cad-suite/lib/../share/yosys/ecp5/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\FD1P3AX'.
Generating RTLIL representation for module `\FD1P3AY'.
Generating RTLIL representation for module `\FD1P3BX'.
Generating RTLIL representation for module `\FD1P3DX'.
Generating RTLIL representation for module `\FD1P3IX'.
Generating RTLIL representation for module `\FD1P3JX'.
Generating RTLIL representation for module `\FD1S3AX'.
Generating RTLIL representation for module `\FD1S3AY'.
Generating RTLIL representation for module `\FD1S3BX'.
Generating RTLIL representation for module `\FD1S3DX'.
Generating RTLIL representation for module `\FD1S3IX'.
Generating RTLIL representation for module `\FD1S3JX'.
Generating RTLIL representation for module `\IFS1P3BX'.
Generating RTLIL representation for module `\IFS1P3DX'.
Generating RTLIL representation for module `\IFS1P3IX'.
Generating RTLIL representation for module `\IFS1P3JX'.
Generating RTLIL representation for module `\OFS1P3BX'.
Generating RTLIL representation for module `\OFS1P3DX'.
Generating RTLIL representation for module `\OFS1P3IX'.
Generating RTLIL representation for module `\OFS1P3JX'.
Generating RTLIL representation for module `\IB'.
Generating RTLIL representation for module `\IBPU'.
Generating RTLIL representation for module `\IBPD'.
Generating RTLIL representation for module `\OB'.
Generating RTLIL representation for module `\OBZ'.
Generating RTLIL representation for module `\OBZPU'.
Generating RTLIL representation for module `\OBZPD'.
Generating RTLIL representation for module `\OBCO'.
Generating RTLIL representation for module `\BB'.
Generating RTLIL representation for module `\BBPU'.
Generating RTLIL representation for module `\BBPD'.
Generating RTLIL representation for module `\ILVDS'.
Generating RTLIL representation for module `\OLVDS'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$619b7c9a4d44585e10b42f7fb79b16304cca97c5\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$3473b80e08b01d686d2b2492c52d9925512dbf03\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$703154c033c304efa988d97ee18c0f33c9607c56\$lut for cells of type $lut.
Using template $paramod$7e99420cfaf0b3393477e9911b52a12e2723d4ba\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod$7ea2352f8f054781a715aeddf3e67f1db65f005a\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$50ac250c64e84a0a88ab7c8dd9cff6a491e20fbc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$0fcb06ed76df01e8d45bc2b9e6c8a9b43fa42cb4\$lut for cells of type $lut.
Using template $paramod$f70f7c1ca3b2304e9d7f37ab11c9a564954ea53a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$579000a2c52c56c25bd94e0fe80a74188191f258\$lut for cells of type $lut.
Using template $paramod$f610396a8c1614f373f4d73e3d1e988bc93e396c\$lut for cells of type $lut.
Using template $paramod$a5788e8bd3559e65ba7c6a1d93529c6fb76569b9\$lut for cells of type $lut.
Using template $paramod$149eba62d794e2286dbdb19552471fe81b7c1e9f\$lut for cells of type $lut.
Using template $paramod$59b9c5298693f1134afc14bb11cbd5c19668ae9b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$26509109682d38a2c431830f90802237c1b16854\$lut for cells of type $lut.
Using template $paramod$f5291b9e4c97c5ef3fa924cd8dc7619b2925675f\$lut for cells of type $lut.
Using template $paramod$882bb2aca8f1578beed31e01e60ce68635db9d13\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$2ddcccd9af7012bbbb71535b01f81cd1c912c08d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101001 for cells of type $lut.
Using template $paramod$bc051162dfb23caab98d73c4ec086fe9a67895f2\$lut for cells of type $lut.
Using template $paramod$e9b2e7fb4e126e3e65626bac9738cc5024c24541\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$b19c924e82e74e12bbbdaf9e71fc6291c87db11e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$502ac297d7ce59b0d7ddaf1380c02c4e8279f31a\$lut for cells of type $lut.
Using template $paramod$ad94d00798bd3fe605f04d0ff2c878eb73e3fe2d\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~701 debug messages>

2.45. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in SystemConnect.
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$4442.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$359.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$359.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$359.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$359.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$350.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$4432$lut$aiger4431$215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$4432$lut$flatten\instance1.$0\state[2:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 2)
  Optimizing lut $abc$4432$lut$flatten\instance1.$0\state[2:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$4432$lut$flatten\instance1.$0\state[2:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut4 (4 -> 1)
  Optimizing lut $abc$4432$lut$flatten\instance1.$0\state[2:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut5 (4 -> 1)
  Optimizing lut $abc$4432$lut$flatten\instance1.$0\state[2:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$4432$lut$flatten\instance1.$0\state[2:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$321.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$4432$lut$flatten\instance1.$0\state[2:0][0].genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$4432$lut$aiger4431$296.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 3)
  Optimizing lut $abc$4432$lut$aiger4431$296.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 3)
  Optimizing lut $abc$4432$lut$aiger4431$230.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut2 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$230.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut3 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$230.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut6 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$230.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut7 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$197.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$4432$lut$aiger4431$296.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$4432$lut$aiger4431$321.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$230.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$4432$lut$aiger4431$280.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$4432$lut$aiger4431$296.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$4432$lut$aiger4431$311.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$4432$lut$aiger4431$321.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$4432$lut$aiger4431$359.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$4432$lut$aiger4431$215.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$4432$lut$auto$opt_dff.cc:219:make_patterns_logic$666.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$4432$lut$auto$opt_dff.cc:219:make_patterns_logic$685.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$4432$lut$flatten\instance1.$0\state[2:0][0].genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$4432$lut$flatten\instance1.$0\state[2:0][1].genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$4432$lut$aiger4431$359.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$4442.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
Removed 0 unused cells and 128 unused wires.

2.46. Executing AUTONAME pass.
Renamed 7523 objects in module SystemConnect (71 iterations).
<suppressed ~429 debug messages>

2.47. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `SystemConnect'. Setting top module to SystemConnect.

2.47.1. Analyzing design hierarchy..
Top module:  \SystemConnect

2.47.2. Analyzing design hierarchy..
Top module:  \SystemConnect
Removed 0 unused modules.

2.48. Printing statistics.

=== SystemConnect ===

   Number of wires:                232
   Number of wire bits:            424
   Number of public wires:         232
   Number of public wire bits:     424
   Number of ports:                  5
   Number of port bits:             18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                237
     $scopeinfo                      2
     CCU2C                          39
     EHXPLLL                         1
     L6MUX21                        13
     LUT4                           97
     PFUMX                          27
     TRELLIS_FF                     58

2.49. Executing CHECK pass (checking for obvious problems).
Checking module SystemConnect...
Found and reported 0 problems.

2.50. Executing JSON backend.

Warnings: 5 unique messages, 5 total
End of script. Logfile hash: e02821d9fc, CPU: user 0.89s system 0.03s, MEM: 37.82 MB peak
Yosys 0.48+57 (git sha1 d37449605, clang++ 18.1.8 -fPIC -O3)
Time spent: 28% 21x read_verilog (0 sec), 14% 11x techmap (0 sec), ...
